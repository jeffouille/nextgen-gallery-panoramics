# Config Name: Default kmakemultires config file for 1.0.8.15
# Description: NextGEN Gallery Panoramic krpano Default kmakemultires config file
# Author: Geoffroy Deleury
# Version: 1.00

# This is a config file that can be used with NextGEN Gallery Panoramic to create multires panoramic.
# More info in krpano.com
# Copy it before modifying it

# kmakemultires.config / kmakemultires config files documentation
# default config file for the kmakemultires tool
# krpano tools 1.0.8.15
#
#
# SETTINGS:
#
#
# general notes about file paths:
#
# - when defining a path for an output file it is possible to use
#   placeholders to refer to input file path or name:
#
# - the placeholder %INPUTPATH%:
#    * this is path of the current input file
#    * it can be used to generate the output at the location of the input file
#
# - the placeholder %BASENAME%:
#    * this is the 'basename' of a panorama image without path or extension
#    * cubeside pre- or suffixes are removed in the basename
#    * when generating a basename is not possible, then the name 'pano####' 
#      will be used, where '####' is a sequential number which starts at 0000.
#

# TO SEND TO THE PROGRAM
#hfov
#voffset
#vfov (opt)
#tilepath=%INPUTPATH%/pano/tiles/[mres_c/]l%Al/%Av/l%Al[_c]_%Av_%Ah.jpg
#previewpath=%INPUTPATH%/%BASENAME%.tiles/preview.jpg
#customimage[ipad3].path=%INPUTPATH%/pano/tiles/ipad3_%s.jpg
#customimage[mobile].path=%INPUTPATH%/pano/tiles/mobile_%s.jpg
#thumbpath=%INPUTPATH%/%BASENAME%.tiles/thumb.jpg
#xmlpath=%INPUTPATH%/%BASENAME%.xml
#xmltemplate=xml/vtour.xml
#xmltemplate_scene=xml/vtour_scenetemplate.xml
#xmltemplate_view=xml/vtour_viewtemplate.xml



##########################
## Input Image Settings ##
##########################

# panotype=autodetect
# - the panoramic type of the input image
# - possible settings:
#   - autodetect - the type will be detected by the imagesize / side-aspect
#      * 2:1 aspect = spherical pano
#      * 1:1 aspect and six files with the same 'basename' = cubical pano
#      * other aspects - ask the user
#   - sphere          - force assuming that the input is a full spherical 360x180 image
#   - cylinder        - force assuming that the input is a 360x* cylinder
#   - flat            - force assuming that the input is a flat image
#   - partialsphere   - force assuming that the input is a partial sphere   (hfov setting needed!)
#   - partialcylinder - force assuming that the input is a partial cylinder (hfov setting needed!)
#
panotype=partialsphere


# hfov=360
# vfov=auto
# voffset=0
# - predefined settings for partial spherical/cylinder panos
# - hfov set the horizontal field of view of the image
# - the vfov value will/can be calculated automatically
# - voffset - vertical shift away from the horizon (+/- degrees)
#
hfov=360
vfov=auto
voffset=0


##########################
## Processing Settings  ##
##########################

# makescenes=false
# - Generate a single xml file with a <scene> elements for each input image. A <scene> is like an 'inline-xml'. This can be used for automatically generating virtual tours.
# - When disabled, a xml file for each input image will be generated.
makescenes=false

# frames=false
# - Enable 'multi-frame' / 'object' panos.
# - Each input image is treated as single frame of a movie or animation.
# - All input images need to have the same image size for this case.
# - The tilepath need to use the '%f' placeholder for the current frame number.
frames=false



##########################################################
## Format Conversion Settings (Sphere/Cylinder to Cube) ##
##########################################################

# converttocube=true
# - convert spherical images to cubical images (better viewing quality and better performance)
#
converttocube=true

# converttocubelimit=360x120
# - convert also 'partial' spherical (360x*) images to cubical ones
# - set the range what a partial pano need to achieve to be converted
# - works only when "converttocube" is also set to true
#
converttocubelimit=360x20

# converttocubeformat=kro
# - image fileformat for the temporary cube files
# - possible settings:
#   - kro             = Kolor RAW (no limits, default)
#   - tif,tiff        = TIFF (max. filesize 4GB)
#   - btf,tf8,bigtiff = BigTIFF (no limits)
#   - psd             = Photoshop Document (max. imagesize 30000x30000)
#   - psb             = Photoshop Big Document (max. imagesize 300000x300000)
#   - jpg,jpeg        = JPEG (max. imagesize 30000x30000)
#
converttocubeformat=kro

# tempcubepath=%INPUTPATH%/%BASENAME%_cube%UID%
# - The path and name of the temporary to-cube-converted images (without file-extension).
# - The temporary cube images will be removed automatically after processing.
# - See the notes about file paths for details about the file path placeholders.
# - Additional here a %UID% placeholder is supported for generating an unique id. This should be used to avoid problems when files with the same name were located in the folder.
#
#tempcubepath=%INPUTPATH%/%BASENAME%_cube%UID%
tempcubepath=[FULLBASENAME]_tempcube[UID]

# waitafterconvert=false
# - Wait for an user keypress after converting to cube image.
# - This allows editing the cube image before final processing.
#
waitafterconvert=false



#####################################
## Multi-Resolution Image Settings ##
#####################################

# multires=true
# - Should the tool generate multi-resolution images or 'normal' non-tiled single images.
# - when set to false normal, single, non tiled images were build
#   
multires=true

# tilesize=auto
# - size of the image tiles
# - should be between 256 and 1024
# - Use 'auto' to let the tool automatically find a good value for 'symmetric tile splitting', which can improve the Flash rendering performance.
# - A today recommendation with a view to future versions with GPU rendering and HTML5 would be using 512 as tilesize.
# - Note - the tilesize affects the loading and decoding time and also the rendering performance.
#
tilesize=auto

# levels=auto
# - number of multi-resolution levels to generate
# - use 'auto' to find automatically the best
# - the number of the automatic levels depends on the image size and on 'minsize' and 'maxsize' settings
#
levels=auto

# levelstep=2
# - each multi-resolution level will be reduced by 'levelstep' factor
# - default=2
#
# - examples: 
#    levelstep=2
#      level1=10000x5000
#      level2=5000x2500   (=10000/2, =5000/2)
#      level3=2500x1250   (=5000/2,  =2500/2)
#    levelstep=2.5
#      level1=10000x5000
#      level2=4000x2000   (=10000/2.5  =5000/2.5)
#      level3=1600x800    (=4000/2.5, =2000/2.5)		
#
levelstep=2

# adjustlevelsizes=true
# - Automatically adjust some level sizes to make them better divisible by the tilesize.
# - This will avoid very narrow tile images and can improve the loading and rendering performance.
#
adjustlevelsizes=true

# minsize=auto
# - minimum size for multi-resolution levels (for spherical images this is the height)
# - when levels=auto it will automatically generate levels down to this side
# - use 'auto' to find automatically the best for typical fullscreen panoramas
#
minsize=auto

# maxsize=auto
# - The maximum size (height) for multi-resolution levels.
# - When the input image is larger than this size, then it will be downsampled to this size.
# - Use 'auto' to use the maximum size of the input image.
#
maxsize=auto

# maxcubesize=auto
# - The maximum size (width/height) for the cube images.
# - Use 'auto' to use the maximum size of the input image.
#
maxcubesize=auto



###################################
## Multi-Resolution XML Settings ##
###################################

# progressiveloading=auto
# - set the <image ... progressive="..."> setting in the xml
# - progressive loading means that the lower resolutions will be loaded  first
#   and the resolution by resolution (only for the current view) will be loaded
#   until the current resolution will be reached
# - without progressive loading the current resolution will be loaded at first
# 
# possible settings: true, false or auto
# - when set to auto - then the progressive loading will be enabled only for flat 
#   panos or large partial panos and disabled for full spherical or cubical panos
#
progressiveloading=true


# xmlimageparameters
# - additional parameters for the xml <image> node,
# - set manual values for "multiresthreshold", "progressive" and "prealign"
# - example:
#     xmlimageparameters=multiresthreshold="-0.2" progressive="false"
#
#xmlimageparameters=

# leveldownload=auto / leveldecode=auto
# - set the download and decode settings for each level in the xml
# - when set to auto the automatic mode will be used and nothing will be in the xml
# - possible settings - auto,view,all
# - note - the setting 'all' can cause loading problems with big panos when not all tiles will fit in memory!
leveldownload=auto
leveldecode=auto



########################################
## Output Images / Tile-Paths Setings ##
########################################

# tilepath=%INPUTPATH%/%BASENAME%.tiles/l%Al[_c]_%Av_%Ah.jpg
# - path/name template for the output tiles
# - use the placeholder %INPUTPATH% for path of the input images
# - use the placeholder %BASENAME% for the basename of the panorama image
# 
# - tile placeholders (%l,%h,%v only when multires=true)
#    * %l  - index/number of the current level (1-n)
#    * %h  - horizontal index (indexbase-n)
#    * %v  - vertical index (indexbase-n)
#    * [c] - c = cubeside string (everything between '[' and ']' will be removed on other pano types)
#    * %f - frame index (for multi-frame input)
#    * insert one or more '0' characters or a 'A' between the '%' and the 'l','h' or 'v' characters 
#      to 'fill up' the numbers with '0' characters (for uniform file names),
#      'A' = automatic - add as many '0' as needed, depending on the  highest value, e.g.:
#         %h   -> 1,2,3, ... 9,10,11, ...
#         %0h  -> 01,02,03, ... 09,10,11 ...
#         %00h -> 001,002,003, ... 009,010,011, ..
#         %Ah  -> 01,02,03, ... 09,10,11, ...
#      examples:
#         l%Al[_c]%Av_%Ah.jpg  =>  l1_01_01.jpg       (for sphere images)
#         l%Al[_c]%Av_%Ah.jpg  =>  l1_left_01_01.jpg  (for cube images)
# 
#    * note - for very large images organize the tiles in more folders to keep the
#      number of tiles/folder low for a better server performance,
#      tilepath example for very large images:
#         tilepath=%INPUTPATH%/%BASENAME%.tiles/l%Al/[c]/%Av/l%Al[_c]_%Av_%Ah.jpg
#
#tilepath=%INPUTPATH%/%BASENAME%.tiles/l%Al[_c]_%Av_%Ah.jpg
#tilepath=%INPUTPATH%/%BASENAME%.tiles/l%Al/[c]/%Av/l%Al[_c]_%Av_%Ah.jpg
tilepath=%INPUTPATH%/pano/tiles/mres_[c/]l%Al/%Av/l%Al[_c]_%Av_%Ah.jpg

# indexbase=1
# - numbering start of the tiles
#
indexbase=1



##########################
## Preview Pano Setings ##
##########################

# preview=true
# - Generate a small and smooth preview image.
# - The smoothness of the preview image makes it possible to compress the image very well and make the filesize very small. And this allows a very quick loading.
# - The preview image will be display behind the normal pano during loading.
#
preview=true          

# cspreview=true
# - generate a cubestrip preview image
# - better quality for zenith/nadir views
# - better rendering performance
# - possible settings:
#   - true  => cubestrip preview image
#   - false => spherical preview image
#
cspreview=true


# graypreview=false
# - generate a grayscale preview image
# 
graypreview=false


# previewsmooth=25
# - smooth the preview image
# - 0 to 100 smoothness (higher values are smoother)
#
previewsmooth=25

# previewpath=%INPUTPATH%/%BASENAME%.tiles/preview.jpg
# - path for the preview image
# - use the placeholder %INPUTPATH% for path of the input images
# - use the placeholder %BASENAME% for the basename of the panorama
#
#previewpath=%INPUTPATH%/%BASENAME%.tiles/preview.jpg
#previewpath=%INPUTPATH%/pano/tiles/preview.jpg



###########################################
## Custom Cube Images (for mobile usage) ##
###########################################

# customimage[name].path=...
# - Generate smaller sized cube images.
# - The [name] is any internal unique name.
# - The path and name of the custom cube images. The name should contain the cube-side placeholder '%s'.
# - See the notes about file paths for details about the file path placeholders.

# customimage[name].size=1024
# - Resolution / Size of the custom cube images.

# customimage[name].imagesettings=...
# - Use Custom Image Filtering / Compression Settings
# - These settings will overwrite the default image settings.
# - Available settings:
#   - filter=#
#   - jpegquality=#
#   - jpegsubsamp=#
#   - jpegoptimize=#
#   - jpegprogressive=#

# customimage[name].xml=...
# - XML Template for the custom cube images.
# - Possible placeholders:
#   - [PATH] - path to the custom cube images
#   - [TAB] - tabulator indentation
#   - [NL] - new-line

# Custom Cube Image Example
# An example for generating 1024x1024 cube images for iPhone / iPad / Android:
#   customimage[mobile].path=%INPUTPATH%/%BASENAME%.tiles/mobile_%s.jpg
#   customimage[mobile].res=1024
#   customimage[mobile].imagesettings=jpegquality=82 jpegsubsamp=444 jpegoptimize=true
#   customimage[mobile].xml=<mobile>[NL][TAB]<cube url="[PATH]" />[NL]</mobile>

# generate smaller mobile images
customimage[mobile].size=1024
customimage[mobile].path=%INPUTPATH%/pano/tiles/mobile_%s.jpg
customimage[mobile].imagesettings=jpegquality=85 jpegsubsamp=444 jpegoptimize=true
customimage[mobile].xml=<mobile>[NL][TAB]<cube url="[PATH]" />[NL]</mobile>
# generate smaller ipad3 images
customimage[ipad3].size=1400
customimage[ipad3].path=%INPUTPATH%/pano/tiles/ipad3_%s.jpg
customimage[ipad3].imagesettings=-jpegquality=82 -jpegsubsamp=444 -jpegoptimize=true
customimage[ipad3].xml=<mobile devices="iPad+Retina">[NL][TAB]<cube url="[PATH]" />[NL]</mobile>



##############################
## Thumbnail Image Settings ##
##############################

# makethumb=false
# - Automatically generate a small thumbnail image.
# - For cube-panos this thumbnail will be based on the front-cube-side-image, for all other panos the whole image itself will be used.
#
makethumb=true

# thumbsize=80
# - The square pixel-size of the thumbnail image.
#
thumbsize=100

# thumbpath=%INPUTPATH%/%BASENAME%.tiles/thumb.jpg
# - The path and name of the thumbnail image.
# - See the notes about file paths for details about the file path placeholders.
#
#thumbpath=%INPUTPATH%/%BASENAME%.tiles/thumb.jpg
thumbpath=%INPUTPATH%/pano/tiles/thumb.jpg



#########################
## XML Output Settings ##
#########################

# xml=true
# - generate a xml file with an <image> tag for the generated pano
# - when enabled then the 'xmltemplate' file will be used to generate the xml
#
xml=true

# xmlpath="%INPUTPATH%/%BASENAME%.xml
# - path of the xml to generate
# - use the placeholder %INPUTPATH% for path of the input images
# - use the placeholder %BASENAME% for the basename of the panorama
#
#xmlpath=%INPUTPATH%/%BASENAME%.xml
xmlpath=%INPUTPATH%/pano/pano.xml



##################################
## XML Template / Skin Settings ##
##################################

# xmltemplate=...
# - Template file the output xml file.
# - Possible placeholders:
#        [NAME] - (unfiltered) basename of the pano
#        [BASENAME] - (filtered) basename of the pano
#        [PREVIEW] - place for the <preview> element
#        [IMAGE] - place for the <image> element
#        [SCENES] - place for the <scene> elements
#        [VIEW] - place for the <view> element (based on xmltemplate_view)
#        [PARTIALPANO] - placeholder for ispartialpano="true" for partial panos
#        [VIEWLIMITS] - placeholder for the viewing limits for partial panos
#        [HOTSPOTS] - place for the <hotspot> elements (based on xmltemplate_hotspot)
#        [THUMB] - place for the thumbnail thumburl="..." attribute
#        [DEVICE] - placeholder for devices="flash" for non-html5-compatible panos
#        [HAVEGPS] - insert true or false depending if the input image contains GPS informations or not
#        [GPS] - shortcut for  lat="[LAT]" lng="[LNG]" heading="[HEADING]"
#        [LAT] - the GPS latitude value
#        [LNG] - the GPS longitude value
#        [HEADING] - the GPS heading value

# xmltemplate=xml/vtour.xml

# xmltemplate_additional_file=...
# - Additional files of the xmltemplate xml.
# - This setting can be used more than once to add several files.
# - All given files will be copied directly to the output folder.

# xmltemplate_scene=...
# - Template file for the [SCENES] placeholder.
# - It's possible to use the same placeholders as in the xmltemplate.

# xmltemplate_view=...
# - Template file for the [VIEW] placeholders.

# xmltemplate_hotspot=...
# - Template file for the [HOTSPOTS] placeholders.

#xmltemplate_scene=xml/vtour_scenetemplate.xml
#xmltemplate_view=xml/vtour_viewtemplate.xml

xmltemplate=templates/xml/default.xml


##########################
## HTML Output Settings ##
##########################

# html=true
# - generate a html file where the pano is embedded
# - when enabled then the 'htmltemplate' file will be used to generate the html
# - this is only possible when generating a xml is also enabled
#
html=false

# htmlpath=%INPUTPATH%/%BASENAME%.html
# - path of the generated html file
# - use the placeholder %INPUTPATH% for path of the input images
# - use the placeholder %BASENAME% for the basename of the panorama
#
htmlpath=%INPUTPATH%/%BASENAME%.html



#############################
## HTML Template Settings  ##
#############################

# htmltemplate=...
# - Template file the output html file.
# - Possible placeholders:
#   [XML] - path to the generated xml file
#   [NAME] or [BASENAME] - 'basename' of the pano
#   [SWF] - path to the generated swf file
#   [JS] - path to the viewer embedding script (htmltemplate_js)

# htmltemplate_js=...
# - Path to viewer embedding script.
# - Will be inserted in the [JS] placeholder in the htmltemplate.
# - the paths are made relative to the htmltemplate html fil

# htmltemplate_additional_file=...
# - Additional files of the htmltemplate html page.
# - This setting can be used more than once to add several files.
# - All given files will be copied directly to the output folder.
# - the paths are made relative to the htmltemplate html fil
#
htmltemplate=templates/html/swfkrpano_embedded_krpanojs.html
htmltemplate_js=templates/html/swfkrpano_embedded_krpanojs.js



################################
## Embedded SWF File Settings ##
################################

# buildembeddedswf
# - build a swf file with embedded license and embedded data (Flash only)
# - it embeds: the license, xml files, skins, preview image and the tiles
# - can be used for single swf files
#
buildembeddedswf=false

# buildembeddedswf_files=xml,skin,preview,tiles
# - Select which files to embed when buildembeddedswf is enabled.
# - Possible options:
#       xml = embed the base xml (based on 'xmltemplate')
#       skin = embed the 'xmltemplate_additional_file' files
#       preview = embed the preview image
#       tiles = embed the pano tiles

# embedorderlookat=0/0
# - Sort the embedded tiles to start loading with the tiles at the given looking position.
# - Spherical coordinates in 360x180 degree - 0/0 = image center.
embedorderlookat=0/0

# kprotectclparameters=...
# - Additional parameters for the internal kprotectcl tool when creating swf files.
# - Useable parameters are:
#       -domain=# ... add a domain-limitation
#       -nojs ... disable the Javascript interface of viewer
#       -nolu ... disable local / offline usage
#       -expire=YYYY-MM-DD ... set a expire date
#       -expiredurl=# ... url to open at expire date
#       -swfsize=# ... set standalone size of the swf (WIDTHxHEIGHT)
#       -fs ... start in fullscreen mode (Standalone Flashplayer only)
#       -nomb ... no menu bar (Standalone Flashplayer only)
kprotectclparameters=-nomb -swfsize=900x600



############################
## Basic / Setup Settings ##
############################

# html5=auto
# - Use / Include the HTML5 (iPhone/iPad) Viewer.
# - Possible settings:
#       auto = only when the HTML5 (iPhone/iPad) license (krpanoiphone.license.js) is available or when running in DEMO mode (no licenses at all)
#       true = always include the HTML5 Viewer
#       false = never include the HTML5 Viewer
html5=false

# embedlicenses=true
# - builds a new .swf file with an embedded krpano.license 
# - builds a new .js file with an embedded the krpano.license.js (if available)
# - when this setting is enabled then the copy* settings don't have an effect anymore
# - Build viewer files with embedded licenses.
# - When disabled the viewer and the license files will be just copied to the output folder. See the copyswf, renamedswf and copylicense settings for this case.
#
embedlicenses=false

# parsegps=true
# - Parse the input-images for EXIF GPS Informations.
# - This can be used for creating automatically geo-tagged panos.
# - The GPS location will be available in the xml-template via placeholders.
parsegps=false

# filterbasename=true
# - Filter-out white-space and non-ASCII characters from the BASENAME and replace them with underline (_) characters.
# - This will avoid path problems across different systems with different character encoding.
filterbasename=true

# cubeshortsyntax=true (for 1.0.8.14 and newer)
# - use the shorter <cube url="pano_%s.jpg" /> syntax instead of
#   the <left url="pano_l.jpg" /> to <down url="_pano_d.jpg" /> syntax
#
cubeshortsyntax=true

# krpanoswf
# - path to the input krpano.swf file
# - needed when using copyswf=true, renamedswf=true, embedlicenses=true or buildembeddedswf=true
#
krpanoswf=krpano.swf

# copyswf=true
# - copy the krpano.swf to the output folder
#
copyswf=false

# renamedswf=false
# - Rename the copied krpano.swf to the pano 'basename'.
#
renamedswf=false

# copylicense=true
# - Copy the krpano viewer license files (krpano.license and krpanoiphone.license.js) to the output folder.
# - When renamedswf is enabled, then the license will be also renamed accordingly.
# - This setting will be ignored on embedlicenses=true or buildembeddedswf=true.
#
copylicense=false

# askforxmloverwrite=true
# - Ask before overwriting an existing xml file.
#
askforxmloverwrite=false

# quiet=false
# - no console output, process silently
# - only errors are shown
#
quiet=true

# waitkey=false
# - wait for keypress after processing
#
waitkey=false

# tempdir=...
# - Set the path where temporary files (swapped-out-memory) should be stored.
# - When not set, the system default will be used.
# - Note - the temporary cube images (tempcubepath) will not be stored there.
#tempdir=



############################################
## Image Filtering / Compression Settings ##
############################################

# filter=LANCZOS
# - downsample filter for lower multi-resolution levels
# - possible filters:
#   - POINT    = simple point filtering (bad quality)
#   - LINEAR   = linear filtering (better, but still bad quality)
#   - CUBIC    = cubic filtering (soft, some loss of details)
#   - HAMMING  = hamming filter (good, only a little loss of details)
#   - GAUSS    = gaussion filtering (good, only a little loss of details)
#   - MITCHELL = mitchell filtering (good quality for upsampling)
#   - LANCZOS  = windowed sinc filter (best quality, keeps the most details)
#
filter=LANCZOS

# jpegquality=85
# - jpeg compression quality for the output image tiles
# - possible setting: 1-100 (1=worst quality, smallest file, 100=best quality, biggest file)
# - Note - don't use quality setting above 95 for web usage! The increased visual quality doesn't correlate with the increased filesize and download-times.
#
jpegquality=90

# jpegsubsamp=422
# - jpeg color subsampling for reducing the jpeg file size
# - more informations: http://en.wikipedia.org/wiki/Chroma_subsampling
# - possible settings:
#   444 = no color subsampling                                  (best quality)
#   422 = horizontal (1/2) color subsampling                    (good compromise)
#   420 = horizontal (1/2) and vertical (1/2) color subsampling (the jpeg default)
#   411 = horizontal (1/4) and vertical (1/2) color subsampling (best compression)
#
jpegsubsamp=444

# jpegoptimize=true
# - optimize jpeg huffman compression tables
# - should be basically always on
# - but this needs more processing memory
# - if memory usage is critical (when processing very large images and only few working 
#   memory is available) then it should be disabled
#
jpegoptimize=true

# jpegprogressive=false
# - Use progressive JPEG encoding.
# - Progressive JPEG images can be smaller, but they are typically slower to decode.
#
jpegprogressive=false

# manualjpegcompression=false
# - Instead of JPEG images, loss-less TIFF images will be created.
# - These TIFF images need to be converted manually to JPEG images. Here it would be possible to use custom tools and settings for the jpeg conversion.
# - In the XML itself the normal JPEG filenames will be used.
#
manualjpegcompression=false
